name: Rebuild slurm with nvml autodetect support

on:
  push:
    # The tag must match the Ubuntu version of the slurm package.
    tags:
      - "*.*.*-*"

defaults:
  run:
    shell: /usr/bin/bash -eo pipefail {0}

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  build-debs-and-release:
    strategy:
      matrix:
        runner_version: ["20.04", "22.04"]
    runs-on: ubuntu-${{ matrix.runner_version }}
    permissions:
      contents: write
    env:
      NVIDIA_DRIVER_VERSION: "535"
      NVIDIA_CUDA_VERSION: "12-2"
      CUDA_KEYRING_VERSION: "1.1-1"
    steps:
      - name: Prepare the environment
        run: |
          SLURM_VERSION="${{ github.ref_name }}"
          echo "SLURM_VERSION=${SLURM_VERSION}" >> "${GITHUB_ENV}"

          # Pick the correct source repository based on the version being built.
          if echo "$SLURM_VERSION" | grep -q '^19\.'; then
            SLURM_SRC_PKG="slurm-llnl"
            DEB_SOURCE_REPO="focal universe"
          else
            SLURM_SRC_PKG="slurm-wlm"
            DEB_SOURCE_REPO="jammy universe"
          fi
          echo "SLURM_SRC_PKG=${SLURM_SRC_PKG}" >> "${GITHUB_ENV}"
          echo "DEB_SOURCE_REPO=${DEB_SOURCE_REPO}" >> "${GITHUB_ENV}"

          # Prepare the build directory.
          BUILDDIR="${SLURM_SRC_PKG}-${SLURM_VERSION}-ubuntu${{ matrix.runner_version }}-debs"
          echo "BUILDDIR=${BUILDDIR}" >> "${GITHUB_ENV}"
          mkdir "${BUILDDIR}"

      - name: Install the Ubuntu build dependencies
        run: |
          echo "deb-src http://archive.ubuntu.com/ubuntu ${DEB_SOURCE_REPO}" | sudo tee -a /etc/apt/sources.list.d/debsrc.list
          sudo apt-get update
          sudo apt-get -y build-dep --only-source "${SLURM_SRC_PKG}=${SLURM_VERSION}"

      - name: Install the NVIDIA build dependencies
        run: |
          sudo apt-get -y install ca-certificates curl
          source /etc/os-release
          curl -LO "https://developer.download.nvidia.com/compute/cuda/repos/${ID}$(echo ${VERSION_ID} | tr -d ".")/x86_64/cuda-keyring_${CUDA_KEYRING_VERSION}_all.deb"
          sudo dpkg -i "cuda-keyring_${CUDA_KEYRING_VERSION}_all.deb"
          sudo ln -s "/usr/local/cuda-$(echo "${NVIDIA_CUDA_VERSION}" | tr "-" "." )" /usr/local/cuda
          sudo apt-get update
          sudo apt-get -y install \
            "libnvidia-compute-${NVIDIA_DRIVER_VERSION}" \
            "cuda-nvml-dev-${NVIDIA_CUDA_VERSION}"

      - name: Build the package
        working-directory: ${{ env.BUILDDIR }}
        run: sudo apt-get source --only-source --compile "${SLURM_SRC_PKG}=${SLURM_VERSION}" | tee "${BUILDDIR}.buildlog"

      - name: Verify that the nvml library was built
        working-directory: ${{ env.BUILDDIR }}
        run: dpkg-deb -c slurm-wlm-basic-plugins_*_amd64.deb | grep gpu_nvml.so > /dev/null

      - name: Create the release archive
        run: |
          tar --verbose --create --auto-compress \
            --file "${BUILDDIR}.tar.gz" \
            "${BUILDDIR}"/*.deb \
            "${BUILDDIR}"/*.buildinfo \
            "${BUILDDIR}"/*.changes \
            "${BUILDDIR}"/*.buildlog

      - name: Create the release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            # Slurm ${{ env.SLURM_VERSION }} with gpu/nvml

            Built with the following NVIDIA dependencies:

            - libnvidia-compute-${{ env.NVIDIA_DRIVER_VERSION }}
            - cuda-nvml-dev-${{ env.NVIDIA_CUDA_VERSION }}
          files: ${{ env.BUILDDIR }}.tar.gz
          fail_on_unmatched_files: true
